<?php

/*
 * Drupal Module: getclicky
 * Adds the required Javascript to the bottom of all your Drupal pages
 * to allow tracking by the getclicky statistics package.
 *
 * Lets you see stats (tables, charts) from within drupal :
 * see the GetClicky settings page.
 */

/*
  define("GETCLICKY_FIELDS_INIT", serialize(array(
  'uid' => t('User ID (uid in mysql)'),
  'name' => t('Username (name)'),
  'roles' => t('User Roles (roles)'),
  )));

  define("GETCLICKY_FIELDS_TO_CLICKY_DEFAULT_MAPPINGS", serialize(array(
  'name' => 'username',
  )));
 */

/**
 * Implements hook_help().
 */
function getclicky_help($path, $arg) {
  switch ($path) {
    case 'admin/config/system/getclicky':
      return t('GetClicky is a free statistics package.');
  }
}

/**
 * Implements hook_menu().
 */
function getclicky_menu() {
  $items = array();

  $items['admin/config/system/getclicky'] = array(
    'title' => 'GetClicky Settings',
    'description' => 'Configure the settings used to generate your GetClicky tracking code.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('getclicky_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'getclicky.admin.inc',
  );

  $items['admin/reports/getclicky-stats-dashboard'] = array(
    'title' => 'Getclicky Stats Dashboard',
    'description' => 'Show Stats Dashboard',
    'page callback' => '_getclicky_output_stats_dashboard',
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */

/**
 * Implements hook_page_build().
 */
function getclicky_page_build(&$page) {
  global $user;
  $site_id_number = variable_get('getclicky_site_id_number', '');

  // Don't track page views in the admin sections
  //@TODO: use path_get_admin_paths() instead of arg(0) comparison to admin.
  if ($site_id_number && (arg(0) != 'admin') && _getclicky_track($user)) {
    /**
     * @TODO: segmentation.
     *
      // Add User profile segmentation values
      if (is_array($profile_fields = variable_get('getclicky_segmentation', '')) && ($user->uid > 0)) {

      $p_bool = module_invoke('profile', 'load_profile', $user);

      //$fields = array();
      if (count($profile_fields) > 0) {

      $segmentation .= <<<HERE
      <script type="text/javascript">
      var clicky_custom = {};
      clicky_custom.session = {

      HERE;

      foreach ($profile_fields as $field_drupal_name => $title) {
      $field_value = $user->$field_drupal_name;

      if (is_array($field_value)) {
      foreach ($field_value as $key => $value) {
      $field_value[$key] = "'" . $field_value[$key] . "'";
      }
      $field_value = "[" . implode(',', $field_value) . "]";
      }
      else {
      $field_value = "'" . $field_value . "'";
      }

      //$fields[$field_drupal_name] = $field_value;
      $mapping = unserialize(GETCLICKY_FIELDS_TO_CLICKY_DEFAULT_MAPPINGS);
      $field_js_name = (!empty($mapping[$field_drupal_name])) ? $mapping[$field_drupal_name] : $field_drupal_name;

      $segmentation .= <<<HERE
      '$field_js_name' : $field_value,

      HERE;
      }
      // Only show segmentation variable if there are specified fields.
      $segmentation .= <<<HERE
      };
      </script>
      HERE;
      }
      $script .= $segmentation;
      }
     */
    // Site search tracking support.
    $url_custom = '';
    if (module_exists('search') && variable_get('getclicky_site_search', FALSE) && arg(0) == 'search') {
      $keys = search_get_keys();
      $url_custom = url('search/' . arg(1), 'search=' . trim($keys));
    }

    // Surround custom urls with single quotes.
    if (!empty($url_custom)) {
      $url_custom = drupal_to_js($url_custom);
    }
    //@TODO: add code for url custom

    $script = _getclicky_output_js_code($site_id_number);

    $page['page_bottom']['getclicky'] = array(
      '#type' => 'markup',
      '#markup' => $script,
    );
  }
}

/**
 * Decides whether track the user or not.
 *
 * @param $account
 *   A user object containing an array of roles to check
 * @return boolean
 *   A decision on if the current user is being tracked by getClicky
 */
function _getclicky_track($account) {
  // By default we don't track users.
  $track = FALSE;

  $roles = variable_get('getclicky_track_roles', array());

  foreach (array_keys($account->roles) as $role) {
    if ($roles[$role]) {
      $track = TRUE;
      break;
    }
  }

  return $track;
}

function _getclicky_output_banner_html_code($site_id_number) {
  return '<a title="Clicky Web Analytics" href="http://getclicky.com/' . $site_id_number . '"><img alt="Clicky Web Analytics" src="http://static.getclicky.com/media/links/badge.gif" border="0" /></a>';


  /**
   * @TODO: 3 badges

    <a title="Clicky Web Analytics" href="http://getclicky.com/157619"><img alt="Clicky Web Analytics" src="http://getclicky.com/media/links/clicky-125.gif" border="0" /></a>

    <a title="Clicky Web Analytics" href="http://getclicky.com/157619"><img alt="Clicky Web Analytics" src="http://getclicky.com/media/links/clicky-125-2.gif" border="0" /></a>

    <a title="Clicky Web Analytics" href="http://getclicky.com/157619"><img alt="Clicky Web Analytics" src="http://getclicky.com/media/links/badge.gif" border="0" /></a>
   */
}

/**
 * Returns secure or unsecure code depending on $secure option.
 */
function _getclicky_output_js_code_secure_or_unsecure($site_id_number, $secure) {
  if ($secure == 'secure') {
    $http_or_https = "https";
  }
  else {
    $http_or_https = "http";
  }

  $js_code = '
  <script src="' . $http_or_https . '://static.getclicky.com/js" type="text/javascript"></script>
  <script type="text/javascript"><!--//--><![CDATA[//><!--
  clicky.init(' . $site_id_number . ');
  //--><!]]>
  </script>
  <noscript><p><img alt="Clicky" src="' . $http_or_https . '://static.getclicky.com/' . $site_id_number . 'ns.gif" /></p></noscript>';


  // Add any custom code snippets if specified
  $codesnippet = variable_get('getclicky_codesnippet', '');
  if (!empty($codesnippet)) {
    $js_code .= '<script type="text/javascript">';
    $js_code .= $codesnippet;
    $js_code .='</script>';
  }

  return $js_code;
}

/**
 * Outputs getclicky code.
 */
function _getclicky_output_js_code($site_id_number) {
  $js_code = '';
  if (variable_get('getclicky_show_banner_image', FALSE)) {
    $js_code .= _getclicky_output_banner_html_code($site_id_number);
  }

  /*     '#options' => array(
    0      t('When onto a https page - do not inject any js code. I do not have a Pro account and/or I do not want to track https pages.'),
    1      t('When onto a https page - use the js code for secure pages. I have a Pro account.'),
    2      t('When onto a https page - use the js code for normal http pages. I do not have a Pro account and I do not mind the mixed-content-warning.'),
    ),
   */

  // Are we on a secure page?
  if (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == "on") {

    $getclicky_secure_pages_tracking_option = variable_get('getclicky_secure_pages_tracking_option', 0);

    if ($getclicky_secure_pages_tracking_option == 0) {// do not inject
      $js_code .= '';
    }
    elseif ($getclicky_secure_pages_tracking_option == 1) { // https page and secure code
      $js_code .= _getclicky_output_js_code_secure_or_unsecure($site_id_number, 'secure');
    }
    elseif ($getclicky_secure_pages_tracking_option == 2) { // https page and unsecure code
      $js_code .= _getclicky_output_js_code_secure_or_unsecure($site_id_number, 'unsecure');
    }
  }
  else { // http page
    $js_code .= _getclicky_output_js_code_secure_or_unsecure($site_id_number, 'unsecure');
  }

  return $js_code;
}

/**
 * Implements hook_block_info().
 */
function getclicky_block_info() {
  $blocks['getclicky_banner'] = array(
    'info' => t('Show GetClicky banner image'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function getclicky_block_view($delta = '') {
  switch ($delta) {
    case "getclicky_banner":
      $block = array(
        'content' => variable_get('getclicky_banner_image_html_code_for_copying', '<a title="Clicky Web Analytics" href="http://getclicky.com/' . variable_get('getclicky_site_id_number', '') . '"><img alt="Clicky Web Analytics" src="http://static.getclicky.com/media/links/badge.gif" border="0" /></a>'),
      );
      break;
  }
  return $block;
}

/**
 * Insert an iframe with the getclicky stats for the current account.
 */
function _getclicky_output_stats_dashboard() {

  $site_id = variable_get('getclicky_site_id_number', '');
  $site_key = variable_get('getclicky_site_key_number', '');

  if ($site_id && $site_key) {

    $iframe = '<iframe style="margin-left: 20px; width: 850px; height: 1000px;" src="http://getclicky.com/stats/wp-iframe?site_id=' . $site_id . '&sitekey=' . $site_key . '"></iframe>';
  }
  else {
    $iframe = "Empty. Please enter site id and sitekey ...";
  }
  return $iframe;
}
